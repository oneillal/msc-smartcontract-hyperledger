@startuml
title
Model
endtitle
class org.accordproject.base.Asset << (A,green) >> {
}
class org.accordproject.base.Participant << (P,lightblue) >> {
}
class org.accordproject.base.Transaction << (T,yellow) >> {
   + String transactionId
   + DateTime timestamp
}
class org.accordproject.base.Event {
   + String eventId
   + DateTime timestamp
}
class me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContract << (A,green) >> {
   + AccordParty borrower
   + AccordParty lender
   + String isbn
   + String itemName
   + String grade
   + Boolean exceptionCase
   + Duration fineDuration
   + Double fineAmount
   + Double capPercentage
   + TemporalUnit fractionalPart
}
me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContract --|> org.accordproject.cicero.contract.AccordContract
class me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContractState << (A,green) >> {
   + Double counter
   + Double finesBalance
}
me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContractState --|> org.accordproject.cicero.contract.AccordContractState
class me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContractRequest << (T,yellow) >> {
   + String itemName
   + Boolean exceptionCase
   + DateTime agreedReturn
   + DateTime returnedOn
   + Double itemValue
}
me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContractRequest --|> org.accordproject.cicero.runtime.Request
class me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContractResponse << (T,yellow) >> {
   + String itemName
   + Double fine
}
me.lend.contracts.peer2peerlibrary.Peer2PeerLibraryContractResponse --|> org.accordproject.cicero.runtime.Response
class org.accordproject.cicero.contract.AccordContractState << (A,green) >> {
   + String stateId
}
org.accordproject.cicero.contract.AccordContractState --|> org.accordproject.base.Asset
class org.accordproject.cicero.contract.AccordParty << (P,lightblue) >> {
   + String partyId
}
org.accordproject.cicero.contract.AccordParty --|> org.accordproject.base.Participant
class org.accordproject.cicero.contract.AccordContract << (A,green) >> {
   + String contractId
   + AccordParty[] parties
}
org.accordproject.cicero.contract.AccordContract --|> org.accordproject.base.Asset
class org.accordproject.cicero.contract.AccordClause << (A,green) >> {
   + String clauseId
}
org.accordproject.cicero.contract.AccordClause --|> org.accordproject.base.Asset
class org.accordproject.cicero.runtime.Request << (T,yellow) >> {
}
org.accordproject.cicero.runtime.Request --|> org.accordproject.base.Transaction
class org.accordproject.cicero.runtime.Response << (T,yellow) >> {
}
org.accordproject.cicero.runtime.Response --|> org.accordproject.base.Transaction
class org.accordproject.cicero.runtime.ErrorResponse << (T,yellow) >> {
}
org.accordproject.cicero.runtime.ErrorResponse --|> org.accordproject.base.Transaction
class org.accordproject.cicero.runtime.Obligation {
   + AccordContract contract
   + Participant promisor
   + Participant promisee
   + DateTime deadline
}
org.accordproject.cicero.runtime.Obligation --|> org.accordproject.base.Event
class org.accordproject.cicero.runtime.PaymentObligation {
   + MonetaryAmount amount
   + String description
}
org.accordproject.cicero.runtime.PaymentObligation --|> org.accordproject.cicero.runtime.Obligation
class org.accordproject.cicero.runtime.NotificationObligation {
   + String title
   + String message
}
org.accordproject.cicero.runtime.NotificationObligation --|> org.accordproject.cicero.runtime.Obligation
class org.accordproject.cicero.runtime.Payload {
   + AccordContract contract
   + Request request
   + AccordContractState state
}
class org.accordproject.cicero.runtime.Success {
   + Response response
   + AccordContractState state
   + Event[] emit
}
class org.accordproject.cicero.runtime.Failure {
   + ErrorResponse error
}
class org.accordproject.money.CryptoMonetaryAmount {
   + Double doubleValue
   + CryptoCurrencyCode cryptoCurrencyCode
}
class org.accordproject.money.CryptoCurrencyCode << (E,grey) >> {
   + ADA
   + BCH
   + BTC
   + DASH
   + EOS
   + ETC
   + ETH
   + LTC
   + NEO
   + XLM
   + XMR
   + XRP
   + ZEC
}
class org.accordproject.money.MonetaryAmount {
   + Double doubleValue
   + CurrencyCode currencyCode
}
class org.accordproject.money.CurrencyCode << (E,grey) >> {
   + AED
   + AFN
   + ALL
   + AMD
   + ANG
   + AOA
   + ARS
   + AUD
   + AWG
   + AZN
   + BAM
   + BBD
   + BDT
   + BGN
   + BHD
   + BIF
   + BMD
   + BND
   + BOB
   + BOV
   + BRL
   + BSD
   + BTN
   + BWP
   + BYN
   + BZD
   + CAD
   + CDF
   + CHE
   + CHF
   + CHW
   + CLF
   + CLP
   + CNY
   + COP
   + COU
   + CRC
   + CUC
   + CUP
   + CVE
   + CZK
   + DJF
   + DKK
   + DOP
   + DZD
   + EGP
   + ERN
   + ETB
   + EUR
   + FJD
   + FKP
   + GBP
   + GEL
   + GHS
   + GIP
   + GMD
   + GNF
   + GTQ
   + GYD
   + HKD
   + HNL
   + HRK
   + HTG
   + HUF
   + IDR
   + ILS
   + INR
   + IQD
   + IRR
   + ISK
   + JMD
   + JOD
   + JPY
   + KES
   + KGS
   + KHR
   + KMF
   + KPW
   + KRW
   + KWD
   + KYD
   + KZT
   + LAK
   + LBP
   + LKR
   + LRD
   + LSL
   + LYD
   + MAD
   + MDL
   + MGA
   + MKD
   + MMK
   + MNT
   + MOP
   + MRU
   + MUR
   + MVR
   + MWK
   + MXN
   + MXV
   + MYR
   + MZN
   + NAD
   + NGN
   + NIO
   + NOK
   + NPR
   + NZD
   + OMR
   + PAB
   + PEN
   + PGK
   + PHP
   + PKR
   + PLN
   + PYG
   + QAR
   + RON
   + RSD
   + RUB
   + RWF
   + SAR
   + SBD
   + SCR
   + SDG
   + SEK
   + SGD
   + SHP
   + SLL
   + SOS
   + SRD
   + SSP
   + STN
   + SVC
   + SYP
   + SZL
   + THB
   + TJS
   + TMT
   + TND
   + TOP
   + TRY
   + TTD
   + TWD
   + TZS
   + UAH
   + UGX
   + USD
   + USN
   + UYI
   + UYU
   + UZS
   + VEF
   + VND
   + VUV
   + WST
   + XAF
   + XAG
   + XAU
   + XBA
   + XBB
   + XBC
   + XBD
   + XCD
   + XDR
   + XOF
   + XPD
   + XPF
   + XPT
   + XSU
   + XTS
   + XUA
   + XXX
   + YER
   + ZAR
   + ZMW
   + ZWL
}
class org.accordproject.time.Month << (E,grey) >> {
   + January
   + February
   + March
   + April
   + May
   + June
   + July
   + August
   + September
   + October
   + November
   + December
}
class org.accordproject.time.Day << (E,grey) >> {
   + Monday
   + Tuesday
   + Wednesday
   + Thursday
   + Friday
   + Saturday
   + Sunday
}
class org.accordproject.time.TemporalUnit << (E,grey) >> {
   + seconds
   + minutes
   + hours
   + days
   + weeks
}
class org.accordproject.time.Duration {
   + Long amount
   + TemporalUnit unit
}
class org.accordproject.time.PeriodUnit << (E,grey) >> {
   + days
   + weeks
   + months
   + quarters
   + years
}
class org.accordproject.time.Period {
   + Long amount
   + PeriodUnit unit
}
@enduml
